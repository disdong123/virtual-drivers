name: ci-cd-server

on:
  push:
    branches:
      - cicd

env:
  IMAGE_TAG: ${{ github.sha }}
  ENV_SERVER: ${{ secrets.ENV_SERVER }}
  ENV_PERSISTENCE: ${{ secrets.ENV_PERSISTENCE }}
  ENV_CACHE: ${{ secrets.ENV_CACHE }}
  ENV_API_CLIENT: ${{ secrets.ENV_API_CLIENT }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
#      - name: Copy application.yaml
#        run: |
#          pwd
#          touch ./virtual-drivers-server/src/main/resources/application.yaml
#          echo "${{ secrets.ENV_SERVER }}" > ./virtual-drivers-server/src/main/resources/application.yaml
#          touch ./virtual-drivers-persistence/src/main/resources/persistence.yaml
#          echo "${{ secrets.ENV_PERSISTENCE }}" > ./virtual-drivers-persistence/src/main/resources/persistence.yaml
#          touch ./virtual-drivers-cache/src/main/resources/cache.yaml
#          echo "${{ secrets.ENV_CACHE }}" > ./virtual-drivers-cache/src/main/resources/cache.yaml
#          touch ./virtual-drivers-api-client/src/main/resources/api-client.yaml
#          echo "${{ secrets.ENV_API_CLIENT }}" > ./virtual-drivers-api-client/src/main/resources/api-client.yaml
#          touch ./internal/virtual-drivers-position-handler/src/main/resources/application.yaml
#          echo "${{ secrets.ENV_POSITION_HANDLER }}" > ./internal/virtual-drivers-position-handler/src/main/resources/application.yaml
      - run: touch ./virtual-drivers-server/src/main/resources/application.yaml
      - run: echo "${{ env.ENV_SERVER }}" > ./virtual-drivers-server/src/main/resources/application.yaml
      - run: touch ./virtual-drivers-server/src/main/resources/persistence.yaml
      - run: echo "${{ env.ENV_PERSISTENCE }}" > ./virtual-drivers-server/src/main/resources/persistence.yaml
      - run: touch ./virtual-drivers-server/src/main/resources/cache.yaml
      - run: echo "${{ env.ENV_CACHE }}" > ./virtual-drivers-server/src/main/resources/cache.yaml
      - run: touch ./virtual-drivers-server/src/main/resources/api-client.yaml
      - run: echo "${{ env.ENV_API_CLIENT }}" > ./virtual-drivers-server/src/main/resources/api-client.yaml
      - name: Set application.yaml
        uses: actions/upload-artifact@v2
        with:
          name: application.yaml
          path: |
            ./virtual-drivers-server/src/main/resources/application.yaml
            ./virtual-drivers-server/src/main/resources/persistence.yaml
            ./virtual-drivers-server/src/main/resources/cache.yaml
            ./virtual-drivers-server/src/main/resources/api-client.yaml
      - run: touch ./virtual-drivers-server/src/main/resources/application.yaml
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        env:
          DISDONG_USERNAME: ${{ secrets.DISDONG_USERNAME }}
          DISDONG_TOKEN: ${{ secrets.DISDONG_TOKEN }}
        run: ./gradlew clean build -x test
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/virtual-drivers-server:${{ env.IMAGE_TAG }}
          context: ./virtual-drivers-server
  cd:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          key: ${{ secrets.AWS_EC2_PEM }}
          username: ubuntu
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker image prune -af
            docker pull ${{ secrets.DOCKERHUB_USER }}/virtual-drivers-server:${{ env.IMAGE_TAG }}

            rm -f server.sh
            touch server.sh

            echo "docker kill virtual-drivers-server 2>/dev/null" >> server.sh
            echo "docker rm virtual-drivers-server 2>/dev/null" >> server.sh
            echo docker run --name virtual-drivers-server --rm -d -p 8080:8080 \
              --log-driver=syslog \
              ${{ secrets.DOCKERHUB_USER }}/virtual-drivers-server:${{ env.IMAGE_TAG }} >> server.sh

            bash server.sh
